<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.1.RELEASE</version>
        <relativePath /> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.lddw.algorithm</groupId>
    <artifactId>algorithm-resolver</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>algorithm-resolver</name>
    <description>spring-boot-algorithm</description>

    <properties>
        <java.version>1.8</java.version>
        <vaadin.version>14.0.15</vaadin.version>
        <!-- 推荐使用Harbor -->
        <docker.image.prefix>lddw</docker.image.prefix>
        <!-- 推荐使用Harbor -->

<!--        <docker.registry.url>registry.cn-beijing.aliyuncs.com</docker.registry.url>-->
<!--        <docker.host>http://192.168.98.128:2375</docker.host>-->
<!--        <docker.host>http://123.56.10.9:2375</docker.host>-->
        <docker.registry.url>192.168.98.131</docker.registry.url>
        <docker.host>http://192.168.98.131:2375</docker.host>
        <docker.plugin.version>1.2.0</docker.plugin.version>
        <docker.username>lx_java@foxmail.com</docker.username>
        <docker.password>lx123456</docker.password>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>4.5.15</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <finalName>algorithm</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <fork>true</fork>
                    <includeSystemScope>true</includeSystemScope>
                </configuration>
            </plugin>

            <!--maven  docker 打包插件 -->
            <!-- <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker.plugin.version}</version>
                <configuration>
                    <imageName>${docker.registry.url}/lddw/${project.artifactId}:${project.version}</imageName>
                    <dockerDirectory>${project.basedir}</dockerDirectory>
                    <dockerHost>${docker.host}</dockerHost>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                    <registryUrl>${docker.registry.url}</registryUrl>
                    <serverId>local-registry-docker</serverId>
                    <pushImage>true</pushImage>
                </configuration>
            </plugin> -->
        </plugins>
    </build>

</project>
